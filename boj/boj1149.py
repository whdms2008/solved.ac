# RGB 거리

# 집이 N개 있음
# 1번부터 N번 집이 순서대로 있음.

# 거리는 선분으로 나타낼 수 있음

# 집의 색은 (빨, 초, 파) 중 하나의 색으로 칠해야 함
# 아래 규칙을 만족하면서 모든 집을 비용의 최솟값을 구해보자

# 1번 집의 색은 2번 집의 색과 같지 않아야 한다.
# N번 집의 색은 N-1번 집의 색과 같지 않아야 한다.
# i(2 <= i <= N-1) 번 집의 색은 i-1번, i+1번 집의 색과 같지 않아야 한다.

# 입력
# 첫째 줄 : 집의 수 N (2 <= N <= 1,000) 이 주어짐
# 둘째 줄 ~ : N개의 줄에는 각 집을 빨, 초, 파 로 칠하는 비용이 1번 집부터 하나씩 주어짐
# 집을 칠하는 비용은 1,000보다 작거나 같은 자연수이다.

import sys

input = sys.stdin.readline

N = int(input())

dp = [list(map(int, input().split(" "))) for _ in range(N)]

for i in range(1, N):
    dp[i][0] += min(dp[i-1][1], dp[i-1][2])
    dp[i][1] += min(dp[i-1][0], dp[i-1][2])
    dp[i][2] += min(dp[i-1][0], dp[i-1][1])

print(min(dp[N-1][0], dp[N-1][1], dp[N-1][2]))
